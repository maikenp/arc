## Please do not change this file.
## Doing so will unfortunately create unnesseccary merge conflicts between branches and the fork, and nordugrid/arc version of this file.
## To have the automatic builds work on your fork, check that the runner is enabled in your fork: Settings->CI/CD->Runner settings

stages:
  - deploy_and_test



deploy_staging_deb9:
  stage: deploy_and_test
  image: docker:stable
  script:
    - name_container="deb9_`date +%Y%m%d-%H%M`"
    - docker run --name=$name_container --privileged -v "/arc-testfiles:/arc-testfiles:rw" -v "/arc-testlogs:/arc-testlogs:rw" -v "/arc-logs:/arc-logs:rw" --publish  443  --publish 2811 --publish 9000-9002 --publish 9000-9002/udp --rm  maikenp/arc-deploy-debian9
    - docker stop $name_container
    - echo "*************>>  Done - back from inner container"
    - ls -lhrt /arc-logs
    - cp -r /arc-logs $CI_PROJECT_DIR
    - ls -lhrt $CI_PROJECT_DIR/arc-logs
    - rm -rf /arc-logs/*
    - ls -lhrt /arc-logs
    - rm -f /arc-testlogs/*
    - ls -lhrt /arc-testlogs
  environment:
    name: staging
  artifacts:
    when: always
    paths:
     - $CI_PROJECT_DIR/arc-logs/
     #- $CI_PROJECT_DIR/arc-tests/
  dependencies:
    - packages_deb9
  tags:
    - docker-socket-runner1
  only:
    - branches@nordugrid/arc
    - tags@nordugrid/arc
  allow_failure: true

deploy_staging_el6:
  stage: deploy_and_test
  image: docker:stable
  script:
    - ls -lhrt /arc-testfiles
    - ls -lhrt /arc-logs
    - name_container="el6_`date +%Y%m%d-%H%M`"
    - docker run --name=$name_container --privileged -v "/arc-testfiles:/arc-testfiles:rw" -v "/arc-testlogs:/arc-testlogs:rw" -v "/arc-logs:/arc-logs:rw" --publish  443  --publish 2811 --publish 9000-9002 --publish 9000-9002/udp --rm  maikenp/arc-deploy-centos6
    - docker stop $name_container
    - echo "*************>>  Done - back from inner container"
    - ls -lhrt /arc-logs
    - cp -r /arc-logs $CI_PROJECT_DIR
    - ls -lhrt $CI_PROJECT_DIR/arc-logs
    - rm -rf /arc-logs/*
    - ls -lhrt /arc-logs
    - rm -f /arc-testlogs/*
    - ls -lhrt /arc-testlogs
  environment:
    name: staging
  artifacts:
    when: always
    paths:
     - $CI_PROJECT_DIR/arc-logs/
     #- $CI_PROJECT_DIR/arc-tests/
  dependencies:
    - packages_el6
  tags:
    - docker-socket-runner-bgo4 
  only:
    - branches@nordugrid/arc
    - tags@nordugrid/arc
  allow_failure: true


deploy_staging_centos7:
  stage: deploy_and_test
  image: docker:stable
  script:
    - export DOCKER_API_VERSION=1.19
    - docker pull maikenp/arc-deploy-centos7
    - name_container="deb9_`date +%Y%m%d-%H%M`"
    - docker run --name=$name_container --privileged -v "/arc-testfiles:/arc-testfiles:rw" -v "/arc-testlogs:/arc-testlogs:rw" -v "/arc-logs:/arc-logs:rw" --publish  443  --publish 2811 --publish 9000-9002 --publish 9000-9002/udp --rm  maikenp/arc-deploy-centos7
    - docker stop $name_container
    - echo "*************>>  Done - back from inner container"
    - ls -lhrt /arc-logs
    - cp -r /arc-logs $CI_PROJECT_DIR
    - ls -lhrt $CI_PROJECT_DIR/arc-logs
    - rm -rf /arc-logs/*
    - ls -lhrt /arc-logs
    - rm -f /arc-testlogs/*
    - ls -lhrt /arc-testlogs
  environment:
    name: staging
  artifacts:
    when: always
    paths:
     - $CI_PROJECT_DIR/arc-logs/
     #- $CI_PROJECT_DIR/arc-tests/
  dependencies:
    - packages_el7
  tags:
    - 158.39.75.5 
  only:
    - branches@nordugrid/arc
    - tags@nordugrid/arc
  allow_failure: true



## note-to-self: can also download the rpms from latest job with (example for el7):
    ## wget 'https://source.coderefinery.org/nordugrid/arc/-/jobs/artifacts/master/download?job=packages_el7' -O artifacts.zip
